#!/usr/bin/env bash

set -e

usage() {
	echo "Usage: bisect <working copy> <broken revision> <good revision> [<test> [<outcome> [<test options...>]]]"
	echo "If you don't give it a test it will prompt you to run the test and tell it if it passed or failed"
}

if [ -z "$3" ]; then
	usage
	exit 1
fi

WCPATH="$1"
badrev="$2"
goodrev="$3"

if [ -z "$4" ]; then
	TEST=
else
	TEST="$4"
	shift
fi

if [ -z "$4" ]; then
	outcome=PASSED
else
	outcome="$4"
	shift
fi

shift
shift
shift
TESTOPTIONS="$*"

if ! [ -d "$WCPATH/apama-src" ]; then
	echo "Cannot find working copy $WCPATH"
	usage
	exit 1
fi

cd "$WCPATH"
WCPATH="`pwd`"

if ! svn info >/dev/null 2>&1; then
	echo "$WCPATH does not appear to be an svn working copy"
	usage
	exit 1
fi

if [ -n "$TEST" ]; then
	echo "Searching for $TEST in $WCPATH/apama-test"
	TESTPATH="`find apama-test -name "$TEST" -and -type d`"

	if ! [ -d "$TESTPATH" ]; then
		echo "Can't find test $TEST in working copy"
		usage
		exit 1
	fi
	TESTPATH="`dirname "$TESTPATH"`"
fi

echo -n "Bisecting $WCPATH over range "

if (( $badrev > $goodrev )); then
	
	regression=true
	top=$badrev
	bottom=$goodrev
	echo -n "$goodrev (good) ... $badrev (bad)"

else

	regression=false
	top=$goodrev
	bottom=$badrev
	echo -n "$badrev (bad) ... $goodrev (good)"
	
fi

if [ -n "$TEST" ]; then
	echo " using test $TEST as a verifier"
else
	echo " no test given, using manual verification"
fi

LOGPATH=$WCPATH/bisect
mkdir -p $LOGPATH
echo "Logs will be written to $LOGPATH"

while (( $top > $bottom )); do

	diff=$(( $top - $bottom )) 
	diff=$(( $diff / 2 ))
	if [ "$diff" = "0" ]; then diff=1; fi
	trial=$(( $bottom + $diff ))

	if [ "$trial" = "$bottom" ]; then break; fi
	if [ "$trial" = "$top" ]; then break; fi

	echo "top=$top, bottom=$bottom, trial=$trial"

	echo -n "Trying r$trial ... "

	svn up -r$trial apama-src &> $LOGPATH/$trial-up.log
	( 
		nice -1 ./apama-src/xpybuild.py -J -f apama-src/root.xpybuild.py -Fprogress -L $LOGPATH/build-$trial.log &&
		nice -1 ./apama-test/xpybuild.py -J -f apama-test/root.xpybuild.py -Fprogress -L $LOGPATH/build-$trial.log
	) || (
		rm -rf ./apama-src/output*
		rm -rf ./apama-test/tools/output*
		nice -1 ./apama-src/xpybuild.py -J -f apama-src/root.xpybuild.py -Fprogress -L $LOGPATH/build-$trial.log
		nice -1 ./apama-test/xpybuild.py -J -f apama-test/root.xpybuild.py -Fprogress -L $LOGPATH/build-$trial.log
	)
	if [ -n "$TEST" ]; then
		pushd "$TESTPATH" &>/dev/null
		nice -1 ./runTest.py $TESTOPTIONS $TEST &> $LOGPATH/$trial-run.log
		popd &>/dev/null
		sed -n '/Outcome/s/.*: *//p' $LOGPATH/$trial-run.log
		if grep $outcome $LOGPATH/$trial-run.log &>/dev/null; then
			pass=1
		else
			pass=
		fi
	else
		echo -n "Please run the test now and give the result (Pass or Fail): "
		read result
		if [ "${result:0:1}" == "P" ] || [ "${result:0:1}" == "p" ] ; then
			pass=1
		else
			pass=
		fi
	fi
	
	if [ -n "$pass" ]; then
		if [ "$regression" = "true" ]; then
			bottom=$trial
		else
			top=$trial
		fi
	else
		if [ "$regression" = "true" ]; then
			top=$trial
		else
			bottom=$trial
		fi
	fi
done

echo "Bisect finished, regression is between r$bottom and r$top"
